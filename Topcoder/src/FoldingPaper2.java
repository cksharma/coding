import java.util.ArrayList;
import java.util.List;

public class FoldingPaper2 {
    static class Pair {
        int first;
        int second;
        Pair(int first, int second) {
            this.first = first;
            this.second = second;
        }

        @Override
        public String toString() {
            return "Pair{" +
                    "first=" + first +
                    ", second=" + second +
                    '}';
        }
    }

    public int solve(int B, int L, int A) {
        long ans = Integer.MAX_VALUE;

        if ( L < B) {
            int temp = B;
            B = L;
            L = temp;
        }

        List<Pair> list = new ArrayList<>();
        for (int i = 1; i <= A / i; i++) {
            if (A % i == 0)
                list.add(new Pair(i, A / i));
        }

        for (Pair pair : list) {
            //System.out.println(pair);
            int small = pair.first;
            int big = pair.second;

            long cost1 = getCost(small, B) + getCost(big, L);
            long cost2 = getCost(small, L) + getCost(big, B);

            ans = Math.min(ans, Math.min(cost1, cost2));

        }

        return ans >= Integer.MAX_VALUE ? -1 : (int)ans;
    }

    private long getCost(int to, int from) {
        int ans = Integer.MAX_VALUE;
        int cnt = 0;
        while (from >= to) {
            if (from <= to) return cnt;
            from  = (from + 1) / 2;
            cnt++;
        }
        if (cnt != 0) return cnt;
        return (long)ans;
    }

    // BEGIN KAWIGIEDIT TESTING
    // Generated by KawigiEdit-pf 2.3.0
    private static boolean KawigiEdit_RunTest(int testNum, int p0, int p1, int p2, boolean hasAnswer, int p3) {
        System.out.print("Test " + testNum + ": [" + p0 + "," + p1 + "," + p2);
        System.out.println("]");
        FoldingPaper2 obj;
        int answer;
        obj = new FoldingPaper2();
        long startTime = System.currentTimeMillis();
        answer = obj.solve(p0, p1, p2);
        long endTime = System.currentTimeMillis();
        boolean res;
        res = true;
        System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
        if (hasAnswer) {
            System.out.println("Desired answer:");
            System.out.println("\t" + p3);
        }
        System.out.println("Your answer:");
        System.out.println("\t" + answer);
        if (hasAnswer) {
            res = answer == p3;
        }
        if (!res) {
            System.out.println("DOESN'T MATCH!!!!");
        } else if ((endTime - startTime) / 1000.0 >= 2) {
            System.out.println("FAIL the timeout");
            res = false;
        } else if (hasAnswer) {
            System.out.println("Match :-)");
        } else {
            System.out.println("OK, but is it right?");
        }
        System.out.println("");
        return res;
    }

    public static void main(String[] args) {
        boolean all_right;
        boolean disabled;
        boolean tests_disabled;
        all_right = true;
        tests_disabled = false;

        int p0;
        int p1;
        int p2;
        int p3;

        // ----- test 0 -----
        disabled = false;
        p0 = 5;
        p1 = 3;
        p2 = 12;
        p3 = 1;
        all_right = (disabled || KawigiEdit_RunTest(0, p0, p1, p2, true, p3)) && all_right;
        tests_disabled = tests_disabled || disabled;
        // ------------------

        // ----- test 1 -----
        disabled = false;
        p0 = 2;
        p1 = 2;
        p2 = 3;
        p3 = -1;
        all_right = (disabled || KawigiEdit_RunTest(1, p0, p1, p2, true, p3)) && all_right;
        tests_disabled = tests_disabled || disabled;
        // ------------------

        // ----- test 2 -----
        disabled = false;
        p0 = 4;
        p1 = 4;
        p2 = 1;
        p3 = 4;
        all_right = (disabled || KawigiEdit_RunTest(2, p0, p1, p2, true, p3)) && all_right;
        tests_disabled = tests_disabled || disabled;
        // ------------------

        // ----- test 3 -----
        disabled = false;
        p0 = 127;
        p1 = 129;
        p2 = 72;
        p3 = 8;
        all_right = (disabled || KawigiEdit_RunTest(3, p0, p1, p2, true, p3)) && all_right;
        tests_disabled = tests_disabled || disabled;
        // ------------------

        // ----- test 4 -----
        disabled = false;
        p0 = 1;
        p1 = 100000;
        p2 = 100000;
        p3 = 0;
        all_right = (disabled || KawigiEdit_RunTest(4, p0, p1, p2, true, p3)) && all_right;
        tests_disabled = tests_disabled || disabled;
        // ------------------

        // ----- test 5 -----
        disabled = false;
        p0 = 1;
        p1 = 1;
        p2 = 2;
        p3 = -1;
        all_right = (disabled || KawigiEdit_RunTest(5, p0, p1, p2, true, p3)) && all_right;
        tests_disabled = tests_disabled || disabled;
        // ------------------

        if (all_right) {
            if (tests_disabled) {
                System.out.println("You're a stud (but some test cases were disabled)!");
            } else {
                System.out.println("You're a stud (at least on given cases)!");
            }
        } else {
            System.out.println("Some of the test cases had errors.");
        }
    }
    // END KAWIGIEDIT TESTING
}

//Powered by KawigiEdit-pf 2.3.0!
