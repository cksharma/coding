package pastchallenges;

public class FarmvilleDiv2 {
    public int minTime(int[] time, int[] cost, int budget) {
        int ans = 0;
        int n = cost.length;
        for (int i = 0; i < n; i++) {
            for (int j = i + 1; j < n; j++) {
                if (cost[i] > cost[j]) {
                    swap(cost, i, j);
                    swap(time, i, j);
                }
            }
        }

        for (int i = 0; i < n; i++) {
            int T = time[i];
            int C = cost[i];
            while (T > 0 && budget - C >= 0) {
                T--; budget -= C;
            }
            ans += T;
        }
        return ans;
    }

    void swap(int[] a, int i, int j) {
        int t = a[i];
        a[i] = a[j];
        a[j] = t;
    }

    // BEGIN KAWIGIEDIT TESTING
    // Generated by KawigiEdit-pf 2.3.0
    private static boolean KawigiEdit_RunTest(int testNum, int[] p0, int[] p1, int p2, boolean hasAnswer, int p3) {
        System.out.print("Test " + testNum + ": [" + "{");
        for (int i = 0; p0.length > i; ++i) {
            if (i > 0) {
                System.out.print(",");
            }
            System.out.print(p0[i]);
        }
        System.out.print("}" + "," + "{");
        for (int i = 0; p1.length > i; ++i) {
            if (i > 0) {
                System.out.print(",");
            }
            System.out.print(p1[i]);
        }
        System.out.print("}" + "," + p2);
        System.out.println("]");
        FarmvilleDiv2 obj;
        int answer;
        obj = new FarmvilleDiv2();
        long startTime = System.currentTimeMillis();
        answer = obj.minTime(p0, p1, p2);
        long endTime = System.currentTimeMillis();
        boolean res;
        res = true;
        System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
        if (hasAnswer) {
            System.out.println("Desired answer:");
            System.out.println("\t" + p3);
        }
        System.out.println("Your answer:");
        System.out.println("\t" + answer);
        if (hasAnswer) {
            res = answer == p3;
        }
        if (!res) {
            System.out.println("DOESN'T MATCH!!!!");
        } else if ((endTime - startTime) / 1000.0 >= 2) {
            System.out.println("FAIL the timeout");
            res = false;
        } else if (hasAnswer) {
            System.out.println("Match :-)");
        } else {
            System.out.println("OK, but is it right?");
        }
        System.out.println("");
        return res;
    }

    public static void main(String[] args) {
        boolean all_right;
        boolean disabled;
        boolean tests_disabled;
        all_right = true;
        tests_disabled = false;

        int[] p0;
        int[] p1;
        int p2;
        int p3;

        // ----- test 0 -----
        disabled = false;
        p0 = new int[]{100};
        p1 = new int[]{1};
        p2 = 26;
        p3 = 74;
        all_right = (disabled || KawigiEdit_RunTest(0, p0, p1, p2, true, p3)) && all_right;
        tests_disabled = tests_disabled || disabled;
        // ------------------

        // ----- test 1 -----
        disabled = false;
        p0 = new int[]{100};
        p1 = new int[]{1};
        p2 = 101;
        p3 = 0;
        all_right = (disabled || KawigiEdit_RunTest(1, p0, p1, p2, true, p3)) && all_right;
        tests_disabled = tests_disabled || disabled;
        // ------------------

        // ----- test 2 -----
        disabled = false;
        p0 = new int[]{2, 1};
        p1 = new int[]{1, 1};
        p2 = 3;
        p3 = 0;
        all_right = (disabled || KawigiEdit_RunTest(2, p0, p1, p2, true, p3)) && all_right;
        tests_disabled = tests_disabled || disabled;
        // ------------------

        // ----- test 3 -----
        disabled = false;
        p0 = new int[]{1, 2, 3, 4, 5};
        p1 = new int[]{5, 4, 3, 2, 1};
        p2 = 15;
        p3 = 6;
        all_right = (disabled || KawigiEdit_RunTest(3, p0, p1, p2, true, p3)) && all_right;
        tests_disabled = tests_disabled || disabled;
        // ------------------

        // ----- test 4 -----
        disabled = false;
        p0 = new int[]{100, 100, 100, 100, 100, 100, 100, 100, 100, 100};
        p1 = new int[]{2, 4, 6, 8, 10, 1, 3, 5, 7, 9};
        p2 = 5000;
        p3 = 50;
        all_right = (disabled || KawigiEdit_RunTest(4, p0, p1, p2, true, p3)) && all_right;
        tests_disabled = tests_disabled || disabled;
        // ------------------

        // ----- test 5 -----
        disabled = false;
        p0 = new int[]{30, 40, 20, 10};
        p1 = new int[]{10, 20, 30, 40};
        p2 = 5;
        p3 = 100;
        all_right = (disabled || KawigiEdit_RunTest(5, p0, p1, p2, true, p3)) && all_right;
        tests_disabled = tests_disabled || disabled;
        // ------------------



        if (all_right) {
            if (tests_disabled) {
                System.out.println("You're a stud (but some test cases were disabled)!");
            } else {
                System.out.println("You're a stud (at least on given cases)!");
            }
        } else {
            System.out.println("Some of the test cases had errors.");
        }
    }
    // END KAWIGIEDIT TESTING
}

//Powered by KawigiEdit-pf 2.3.0!
