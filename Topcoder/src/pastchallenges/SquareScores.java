package pastchallenges;

import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Set;

public class SquareScores {
    double ans;
    Map<Character, Integer> map;
    Set<Character> set;

    public double calcexpectation(int[] p, String s) {
        init(p, s);
        recurse(0, s.toCharArray());
        return ans;
    }

    private void init(int[] p, String s) {
        this.map = new HashMap<>();
        this.set = new HashSet<>();
        char ch = 'a';
        for (int i = 0; i < p.length; i++) {
            map.put(ch++, p[i]);
        }
        for (int i = 0; i < s.length(); i++) {
            set.add(s.charAt(i));
        }
        if (set.size() < 26) {
            for (ch = 'a'; ch <= 'z'; ch++) {
                if (s.contains(ch + "") == false) {
                    set.add(ch);
                    break;
                }
            }
        }
    }

    private void recurse(int index, char[] arr) {
        if (index == arr.length) {
            computeScore(arr);
            return;
        }
        if (arr[index] == '?') {
            for (char ch : set) {
                arr[index] = ch;
                recurse(index + 1, arr);
                arr[index] = '?';
            }
        } else {
            recurse(index + 1, arr);
        }
    }

    private void computeScore(char[] arr) {
        int cnt = 1;
        double res = 0;
        for (int i = 1; i < arr.length; i++) {
            if (arr[i] == arr[i - 1]) {
                cnt++;
            } else {
                Integer item = map.get(arr[i - 1]);
                if (item == null) item = 0;
                res += cnt * item / 100.;
                cnt = 1;
            }
        }
        Integer item = map.get(arr[arr.length - 1]);
        if (item == null) item = 0;
        res += cnt * item / 100.;
        ans += res;
    }

    // BEGIN KAWIGIEDIT TESTING
    // Generated by KawigiEdit-pf 2.3.0
    private static boolean KawigiEdit_RunTest(int testNum, int[] p0, String p1, boolean hasAnswer, double p2) {
        System.out.print("Test " + testNum + ": [" + "{");
        for (int i = 0; p0.length > i; ++i) {
            if (i > 0) {
                System.out.print(",");
            }
            System.out.print(p0[i]);
        }
        System.out.print("}" + "," + "\"" + p1 + "\"");
        System.out.println("]");
        SquareScores obj;
        double answer;
        obj = new SquareScores();
        long startTime = System.currentTimeMillis();
        answer = obj.calcexpectation(p0, p1);
        long endTime = System.currentTimeMillis();
        boolean res;
        res = true;
        System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
        if (hasAnswer) {
            System.out.println("Desired answer:");
            System.out.println("\t" + p2);
        }
        System.out.println("Your answer:");
        System.out.println("\t" + answer);
        if (hasAnswer) {
            res = answer == answer && Math.abs(p2 - answer) <= 1e-9 * Math.max(1.0, Math.abs(p2));
        }
        if (!res) {
            System.out.println("DOESN'T MATCH!!!!");
        } else if ((endTime - startTime) / 1000.0 >= 2) {
            System.out.println("FAIL the timeout");
            res = false;
        } else if (hasAnswer) {
            System.out.println("Match :-)");
        } else {
            System.out.println("OK, but is it right?");
        }
        System.out.println("");
        return res;
    }

    public static void main(String[] args) {
        boolean all_right;
        boolean disabled;
        boolean tests_disabled;
        all_right = true;
        tests_disabled = false;

        int[] p0;
        String p1;
        double p2;

        // ----- test 0 -----
        disabled = false;
        p0 = new int[]{1, 99};
        p1 = "aaaba";
        p2 = 8.0D;
        all_right = (disabled || KawigiEdit_RunTest(0, p0, p1, true, p2)) && all_right;
        tests_disabled = tests_disabled || disabled;
        // ------------------

        // ----- test 1 -----
        disabled = false;
        p0 = new int[]{10, 20, 70};
        p1 = "aa?bbbb";
        p2 = 15.0D;
        all_right = (disabled || KawigiEdit_RunTest(1, p0, p1, true, p2)) && all_right;
        tests_disabled = tests_disabled || disabled;
        // ------------------

        // ----- test 2 -----
        disabled = false;
        p0 = new int[]{10, 20, 30, 40};
        p1 = "a??c?dc?b";
        p2 = 11.117D;
        all_right = (disabled || KawigiEdit_RunTest(2, p0, p1, true, p2)) && all_right;
        tests_disabled = tests_disabled || disabled;
        // ------------------

        // ----- test 3 -----
        disabled = false;
        p0 = new int[]{25, 25, 21, 2, 2, 25};
        p1 = "a??b???????ff??e";
        p2 = 21.68512690712425D;
        all_right = (disabled || KawigiEdit_RunTest(3, p0, p1, true, p2)) && all_right;
        tests_disabled = tests_disabled || disabled;
        // ------------------

        // ----- test 4 -----
        disabled = false;
        p0 = new int[]{4, 4, 4, 3, 4, 4, 4, 4, 4, 4, 3, 4, 4, 4, 3, 4, 4, 4, 4, 4, 4, 4, 3, 4, 4, 4};
        p1 = "??????????????????????????????";
        p2 = 31.16931963781721D;
        all_right = (disabled || KawigiEdit_RunTest(4, p0, p1, true, p2)) && all_right;
        tests_disabled = tests_disabled || disabled;
        // ------------------

        // ----- test 5 -----
        disabled = false;
        p0 = new int[]{4, 3, 4, 3, 8, 2, 4, 3, 4, 4, 3, 2, 4, 4, 3, 4, 2, 4, 7, 6, 4, 4, 3, 4, 4, 3};
        p1 = "makigotapresentfromniko";
        p2 = 23.0D;
        all_right = (disabled || KawigiEdit_RunTest(5, p0, p1, true, p2)) && all_right;
        tests_disabled = tests_disabled || disabled;
        // ------------------

        if (all_right) {
            if (tests_disabled) {
                System.out.println("You're a stud (but some test cases were disabled)!");
            } else {
                System.out.println("You're a stud (at least on given cases)!");
            }
        } else {
            System.out.println("Some of the test cases had errors.");
        }
    }
    // END KAWIGIEDIT TESTING
}

//Powered by KawigiEdit-pf 2.3.0!
