package pastchallenges;

public class PlaneGame {
    public int bestShot(int[] x, int[] y) {
        int ans = countZeros(x, y);
        for (int i = 0; i < x.length; i++) {
            if (x[i] == 0 || y[i] == 0) continue;
            for (int j = 0; j < y.length; j++) {
                int countWays = countRotationWays(x, y, i);
                ans = Math.max(ans, countWays);
            }
        }
        return ans;
    }

    private int countZeros(int[] x, int[] y) {
        int ans = 0;
        for (int i = 0; i < x.length; i++) {
            if (x[i] == 0 || y[i] == 0) ans++;
        }
        return ans;
    }

    private int countRotationWays(int[] x, int[] y, int index) {
        int ans = 0;

        int x1 = x[index];
        int y1 = y[index];

        for (int i = 0; i < x.length; i++) {
            int x2 = x[i];
            int y2 = y[i];
            boolean flag = checkSameLine(x1, y1, x2, y2) || checkRightAngle(x1, y1, x2, y2);
            if (flag) ans++;
        }
        return ans;
    }

    private boolean checkSameLine(long x1, long y1, long x2, long y2) {
        return y1 * x2 == x1 * y2;
    }

    private boolean checkRightAngle(long x1, long y1, long x2, long y2) {
        return y1 * y2 == -1 * x1 * x2;
    }

    // BEGIN KAWIGIEDIT TESTING
    // Generated by KawigiEdit-pf 2.3.0
    private static boolean KawigiEdit_RunTest(int testNum, int[] p0, int[] p1, boolean hasAnswer, int p2) {
        System.out.print("Test " + testNum + ": [" + "{");
        for (int i = 0; p0.length > i; ++i) {
            if (i > 0) {
                System.out.print(",");
            }
            System.out.print(p0[i]);
        }
        System.out.print("}" + "," + "{");
        for (int i = 0; p1.length > i; ++i) {
            if (i > 0) {
                System.out.print(",");
            }
            System.out.print(p1[i]);
        }
        System.out.print("}");
        System.out.println("]");
        PlaneGame obj;
        int answer;
        obj = new PlaneGame();
        long startTime = System.currentTimeMillis();
        answer = obj.bestShot(p0, p1);
        long endTime = System.currentTimeMillis();
        boolean res;
        res = true;
        System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
        if (hasAnswer) {
            System.out.println("Desired answer:");
            System.out.println("\t" + p2);
        }
        System.out.println("Your answer:");
        System.out.println("\t" + answer);
        if (hasAnswer) {
            res = answer == p2;
        }
        if (!res) {
            System.out.println("DOESN'T MATCH!!!!");
        } else if ((endTime - startTime) / 1000.0 >= 2) {
            System.out.println("FAIL the timeout");
            res = false;
        } else if (hasAnswer) {
            System.out.println("Match :-)");
        } else {
            System.out.println("OK, but is it right?");
        }
        System.out.println("");
        return res;
    }

    public static void main(String[] args) {
        boolean all_right;
        boolean disabled;
        boolean tests_disabled;
        all_right = true;
        tests_disabled = false;

        int[] p0;
        int[] p1;
        int p2;

        // ----- test 0 -----
        disabled = false;
        p0 = new int[]{0, 5};
        p1 = new int[]{0, 5};
        p2 = 2;
        all_right = (disabled || KawigiEdit_RunTest(0, p0, p1, true, p2)) && all_right;
        tests_disabled = tests_disabled || disabled;
        // ------------------

        // ----- test 1 -----
        disabled = false;
        p0 = new int[]{0, -1, 1, 1, -1};
        p1 = new int[]{0, -1, -1, 1, 1};
        p2 = 5;
        all_right = (disabled || KawigiEdit_RunTest(1, p0, p1, true, p2)) && all_right;
        tests_disabled = tests_disabled || disabled;
        // ------------------

        // ----- test 2 -----
        disabled = false;
        p0 = new int[]{0, 0, 0, 1, -1};
        p1 = new int[]{0, 1, -1, 0, 0};
        p2 = 5;
        all_right = (disabled || KawigiEdit_RunTest(2, p0, p1, true, p2)) && all_right;
        tests_disabled = tests_disabled || disabled;
        // ------------------

        // ----- test 3 -----
        disabled = false;
        p0 = new int[]{0, -3, 3, 3, -3, 0, 0, 3, -3};
        p1 = new int[]{0, -3, -3, 3, 3, 3, -3, 0, 0};
        p2 = 5;
        all_right = (disabled || KawigiEdit_RunTest(3, p0, p1, true, p2)) && all_right;
        tests_disabled = tests_disabled || disabled;
        // ------------------

        // ----- test 4 -----
        disabled = false;
        p0 = new int[]{0};
        p1 = new int[]{0};
        p2 = 1;
        all_right = (disabled || KawigiEdit_RunTest(4, p0, p1, true, p2)) && all_right;
        tests_disabled = tests_disabled || disabled;
        // ------------------

        // ----- test 5 -----
        disabled = false;
        p0 = new int[]{-1000000, -1, 999998, 1, -1001, 1000000, -999999, 999999, 0, 0};
        p1 = new int[]{1000000, 1, 1000000, -1, -999, 1000000, 0, 0, -999999, 999999};
        p2 = 5;
        all_right = (disabled || KawigiEdit_RunTest(5, p0, p1, true, p2)) && all_right;
        tests_disabled = tests_disabled || disabled;
        // ------------------

        if (all_right) {
            if (tests_disabled) {
                System.out.println("You're a stud (but some test cases were disabled)!");
            } else {
                System.out.println("You're a stud (at least on given cases)!");
            }
        } else {
            System.out.println("Some of the test cases had errors.");
        }
    }
    // END KAWIGIEDIT TESTING
}

//Powered by KawigiEdit-pf 2.3.0!
