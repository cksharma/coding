package pastchallenges;

public class AttackOfTheClones {
    public int count(int[] firstWeek, int[] lastWeek) {
        int minGap = Integer.MAX_VALUE;
        for (int i = 0; i < firstWeek.length; i++) {
            int index1 = i;
            int index2 = firstWeek.length + getIndex(lastWeek, firstWeek[i]);
            minGap = Math.min(minGap, index2 - index1 - 1);
        }
        return firstWeek.length - minGap;
    }

    private int getIndex(int[] lastWeek, int num) {
        for (int i = 0; i < lastWeek.length; i++) {
            if (num == lastWeek[i]) return i;
        }
        return 0;
    }

    // BEGIN KAWIGIEDIT TESTING
    // Generated by KawigiEdit-pf 2.3.0
    private static boolean KawigiEdit_RunTest(int testNum, int[] p0, int[] p1, boolean hasAnswer, int p2) {
        System.out.print("Test " + testNum + ": [" + "{");
        for (int i = 0; p0.length > i; ++i) {
            if (i > 0) {
                System.out.print(",");
            }
            System.out.print(p0[i]);
        }
        System.out.print("}" + "," + "{");
        for (int i = 0; p1.length > i; ++i) {
            if (i > 0) {
                System.out.print(",");
            }
            System.out.print(p1[i]);
        }
        System.out.print("}");
        System.out.println("]");
        AttackOfTheClones obj;
        int answer;
        obj = new AttackOfTheClones();
        long startTime = System.currentTimeMillis();
        answer = obj.count(p0, p1);
        long endTime = System.currentTimeMillis();
        boolean res;
        res = true;
        System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
        if (hasAnswer) {
            System.out.println("Desired answer:");
            System.out.println("\t" + p2);
        }
        System.out.println("Your answer:");
        System.out.println("\t" + answer);
        if (hasAnswer) {
            res = answer == p2;
        }
        if (!res) {
            System.out.println("DOESN'T MATCH!!!!");
        } else if ((endTime - startTime) / 1000.0 >= 2) {
            System.out.println("FAIL the timeout");
            res = false;
        } else if (hasAnswer) {
            System.out.println("Match :-)");
        } else {
            System.out.println("OK, but is it right?");
        }
        System.out.println("");
        return res;
    }

    public static void main(String[] args) {
        boolean all_right;
        boolean disabled;
        boolean tests_disabled;
        all_right = true;
        tests_disabled = false;

        int[] p0;
        int[] p1;
        int p2;

        // ----- test 0 -----
        disabled = false;
        p0 = new int[]{1, 2, 3, 4};
        p1 = new int[]{4, 3, 2, 1};
        p2 = 4;
        all_right = (disabled || KawigiEdit_RunTest(0, p0, p1, true, p2)) && all_right;
        tests_disabled = tests_disabled || disabled;
        // ------------------

        // ----- test 1 -----
        disabled = false;
        p0 = new int[]{1, 2, 3, 4};
        p1 = new int[]{1, 2, 3, 4};
        p2 = 1;
        all_right = (disabled || KawigiEdit_RunTest(1, p0, p1, true, p2)) && all_right;
        tests_disabled = tests_disabled || disabled;
        // ------------------

        // ----- test 2 -----
        disabled = false;
        p0 = new int[]{8, 4, 5, 1, 7, 6, 2, 3};
        p1 = new int[]{2, 4, 6, 8, 1, 3, 5, 7};
        p2 = 7;
        all_right = (disabled || KawigiEdit_RunTest(2, p0, p1, true, p2)) && all_right;
        tests_disabled = tests_disabled || disabled;
        // ------------------

        if (all_right) {
            if (tests_disabled) {
                System.out.println("You're a stud (but some test cases were disabled)!");
            } else {
                System.out.println("You're a stud (at least on given cases)!");
            }
        } else {
            System.out.println("Some of the test cases had errors.");
        }
    }
    // END KAWIGIEDIT TESTING
}

//Powered by KawigiEdit-pf 2.3.0!
