package pastchallenges;

public class ConnectingCars {
	public long minimizeCost(int[] positions, int[] lengths) {
		long ans = Long.MAX_VALUE;
		for (int i = 0; i < positions.length; i++) {
			for (int j = 0; j < positions.length; j++) {
				if (positions[i] < positions[j]) {
					swap(positions, i, j);
					swap(lengths, i, j);
				}
			}
		}
		for (int i = 0; i < positions.length; i++) {
			long left = calculateLeft(i, positions, lengths);
			long righ = calculateRight(i, positions, lengths);
			ans = Math.min(ans, left + righ);
		}
		return ans;
	}
	
	private long calculateLeft(int i, int[] positions, int[] lengths) {
		long ans = 0;
		long start = positions[i];
		int j = i - 1;
		while (j >= 0) {
			long myLast = positions[j] + lengths[j];
			long gap = start - myLast;
			ans = ans + gap;
			start = start - lengths[j];
			j--;
		}
		return ans;
	}
	
	private long calculateRight(int i, int[] positions, int[] lengths) {
		long ans = 0;
		long start = positions[i] + lengths[i];
		int j = i + 1;
		while (j < positions.length) {
			long gap = positions[j] - start;
			start = positions[j] + lengths[j] - gap;
			ans = ans + gap;
			j++;
		}
		return ans;
	}
	
	void swap(int[] a, int i, int j) {
		int t = a[i];
		a[i] = a[j];
		a[j] = t;
	}

	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit-pf 2.3.0
	private static boolean KawigiEdit_RunTest(int testNum, int[] p0, int[] p1, boolean hasAnswer, long p2) {
		System.out.print("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p0[i]);
		}
		System.out.print("}" + "," + "{");
		for (int i = 0; p1.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p1[i]);
		}
		System.out.print("}");
		System.out.println("]");
		ConnectingCars obj;
		long answer;
		obj = new ConnectingCars();
		long startTime = System.currentTimeMillis();
		answer = obj.minimizeCost(p0, p1);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p2);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = answer == p2;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}

	public static void main(String[] args) {
		boolean all_right;
		boolean disabled;
		boolean tests_disabled;
		all_right = true;
		tests_disabled = false;

		int[] p0;
		int[] p1;
		long p2;

		// ----- test 0 -----
		disabled = false;
		p0 = new int[] { 1, 3, 10, 20 };
		p1 = new int[] { 2, 2, 5, 3 };
		p2 = 15L;
		all_right = (disabled || KawigiEdit_RunTest(0, p0, p1, true, p2)) && all_right;
		tests_disabled = tests_disabled || disabled;
		// ------------------

		// ----- test 1 -----
		disabled = false;
		p0 = new int[] { 100, 50, 1 };
		p1 = new int[] { 10, 2, 1 };
		p2 = 96L;
		all_right = (disabled || KawigiEdit_RunTest(1, p0, p1, true, p2)) && all_right;
		tests_disabled = tests_disabled || disabled;
		// ------------------

		// ----- test 2 -----
		disabled = false;
		p0 = new int[] { 4, 10, 100, 13, 80 };
		p1 = new int[] { 5, 3, 42, 40, 9 };
		p2 = 66L;
		all_right = (disabled || KawigiEdit_RunTest(2, p0, p1, true, p2)) && all_right;
		tests_disabled = tests_disabled || disabled;
		// ------------------

		// ----- test 3 -----
		disabled = false;
		p0 = new int[] { 5606451, 63581020, 81615191, 190991272, 352848147, 413795385, 468408016, 615921162, 760622952,
				791438427 };
		p1 = new int[] { 42643329, 9909484, 58137134, 99547272, 39849232, 15146704, 144630245, 604149, 15591965,
				107856540 };
		p2 = 1009957100L;
		all_right = (disabled || KawigiEdit_RunTest(3, p0, p1, true, p2)) && all_right;
		tests_disabled = tests_disabled || disabled;
		// ------------------

		if (all_right) {
			if (tests_disabled) {
				System.out.println("You're a stud (but some test cases were disabled)!");
			} else {
				System.out.println("You're a stud (at least on given cases)!");
			}
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}

// Powered by KawigiEdit-pf 2.3.0!
