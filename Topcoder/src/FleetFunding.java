public class FleetFunding {
    public int maxShips(int m, int[] k, int[] a, int[] b) {
        int n = k.length;
        double[] arr = new double[m + 1];

        for (int i = 0; i < n; i++) {
            int min = a[i];
            int max = b[i];
            int range = max - min + 1;
            int allowed = k[i];
            for (int j = min; j <= max; j++) {
                arr[j] += 1. * allowed / range;
            }
        }
        double ans = Double.MAX_VALUE;
        double kk = 0.;
        for (int i = 1; i <= m; i++) {
            ans = Math.min(ans, arr[i]);
            kk = Math.max(kk, arr[i]);
        }
        //return (int)Math.floor(kk);
        return (int)Math.ceil(ans);
    }

    // BEGIN KAWIGIEDIT TESTING
    // Generated by KawigiEdit-pf 2.3.0
    private static boolean KawigiEdit_RunTest(int testNum, int p0, int[] p1, int[] p2, int[] p3, boolean hasAnswer, int p4) {
        System.out.print("Test " + testNum + ": [" + p0 + "," + "{");
        for (int i = 0; p1.length > i; ++i) {
            if (i > 0) {
                System.out.print(",");
            }
            System.out.print(p1[i]);
        }
        System.out.print("}" + "," + "{");
        for (int i = 0; p2.length > i; ++i) {
            if (i > 0) {
                System.out.print(",");
            }
            System.out.print(p2[i]);
        }
        System.out.print("}" + "," + "{");
        for (int i = 0; p3.length > i; ++i) {
            if (i > 0) {
                System.out.print(",");
            }
            System.out.print(p3[i]);
        }
        System.out.print("}");
        System.out.println("]");
        FleetFunding obj;
        int answer;
        obj = new FleetFunding();
        long startTime = System.currentTimeMillis();
        answer = obj.maxShips(p0, p1, p2, p3);
        long endTime = System.currentTimeMillis();
        boolean res;
        res = true;
        System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
        if (hasAnswer) {
            System.out.println("Desired answer:");
            System.out.println("\t" + p4);
        }
        System.out.println("Your answer:");
        System.out.println("\t" + answer);
        if (hasAnswer) {
            res = answer == p4;
        }
        if (!res) {
            System.out.println("DOESN'T MATCH!!!!");
        } else if ((endTime - startTime) / 1000.0 >= 2) {
            System.out.println("FAIL the timeout");
            res = false;
        } else if (hasAnswer) {
            System.out.println("Match :-)");
        } else {
            System.out.println("OK, but is it right?");
        }
        System.out.println("");
        return res;
    }

    public static void main(String[] args) {
        boolean all_right;
        boolean disabled;
        boolean tests_disabled;
        all_right = true;
        tests_disabled = false;

        int p0;
        int[] p1;
        int[] p2;
        int[] p3;
        int p4;

        // ----- test 0 -----
        disabled = false;
        p0 = 3;
        p1 = new int[]{2, 2, 2};
        p2 = new int[]{1, 2, 1};
        p3 = new int[]{3, 3, 2};
        p4 = 2;
        all_right = (disabled || KawigiEdit_RunTest(0, p0, p1, p2, p3, true, p4)) && all_right;
        tests_disabled = tests_disabled || disabled;
        // ------------------

        // ----- test 1 -----
        disabled = false;
        p0 = 1;
        p1 = new int[]{10, 9, 8, 7, 6, 5, 4, 3, 2, 1};
        p2 = new int[]{1, 1, 1, 1, 1, 1, 1, 1, 1, 1};
        p3 = new int[]{1, 1, 1, 1, 1, 1, 1, 1, 1, 1};
        p4 = 55;
        all_right = (disabled || KawigiEdit_RunTest(1, p0, p1, p2, p3, true, p4)) && all_right;
        tests_disabled = tests_disabled || disabled;
        // ------------------

        // ----- test 2 -----
        disabled = false;
        p0 = 10;
        p1 = new int[]{2, 4, 6, 8, 10, 1, 3, 5, 7, 9};
        p2 = new int[]{1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
        p3 = new int[]{1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
        p4 = 1;
        all_right = (disabled || KawigiEdit_RunTest(2, p0, p1, p2, p3, true, p4)) && all_right;
        tests_disabled = tests_disabled || disabled;
        // ------------------

        // ----- test 3 -----
        disabled = false;
        p0 = 84457;
        p1 = new int[]{374778, 169109, 529984, 498638, 29462, 465769, 29285, 394948, 307944, 459189, 349316, 766627, 686851, 404285, 850199, 359378, 3014, 248257, 558856, 27393, 32370, 574862, 337134, 965567, 32223, 935678, 389898, 973497, 990575, 483190, 122899, 857994, 991217, 149619, 415870};
        p2 = new int[]{92, 4997, 11, 28545, 933, 210, 2, 124, 114, 4513, 32959, 1, 57, 17, 13, 133, 1843, 41851, 3, 9296, 9757, 28, 3, 769, 10, 11102, 683, 6173, 11821, 3982, 214, 2, 4304, 439, 1998};
        p3 = new int[]{81034, 54474, 70239, 79597, 47317, 82938, 83883, 74652, 84033, 84422, 84456, 84457, 81095, 83743, 79210, 84255, 84455, 45596, 84456, 82959, 67062, 80330, 44090, 84445, 84454, 84450, 45931, 77190, 83025, 83567, 83639, 84333, 83355, 70982, 84456};
        p4 = 186;
        all_right = (disabled || KawigiEdit_RunTest(3, p0, p1, p2, p3, true, p4)) && all_right;
        tests_disabled = tests_disabled || disabled;
        // ------------------

        // ----- test 4 -----
        disabled = false;
        p0 = 2;
        p1 = new int[]{1000000, 1000000, 1000000, 1000000, 1000000};
        p2 = new int[]{1, 1, 1, 2, 2};
        p3 = new int[]{1, 1, 2, 2, 2};
        p4 = 2500000;
        all_right = (disabled || KawigiEdit_RunTest(4, p0, p1, p2, p3, true, p4)) && all_right;
        tests_disabled = tests_disabled || disabled;
        // ------------------

        if (all_right) {
            if (tests_disabled) {
                System.out.println("You're a stud (but some test cases were disabled)!");
            } else {
                System.out.println("You're a stud (at least on given cases)!");
            }
        } else {
            System.out.println("Some of the test cases had errors.");
        }
    }
    // END KAWIGIEDIT TESTING
}

//Powered by KawigiEdit-pf 2.3.0!
