import java.util.Arrays;

public class CuttingBitString {
    int ans = Integer.MAX_VALUE;

    private void recurse(char[] ch, int soFarAns, int index, long sum, int exp) {
        if (index == ch.length && sum != 0 && canBeExpressed(sum)) {
            ans = Math.min(ans, soFarAns + 1);
        }

        if (index >= ch.length) return;

        if (sum != 0 && canBeExpressed(sum)) {
            System.out.println("sum " + sum + " index " + index);
            recurse(ch, soFarAns + 1, index, 0, 0);
        }
        long now = ch[index] == '1' ? (long)Math.pow(2, exp) : 0;
        System.out.println("inex = " + index + " now = " + (now) + " sum = " + sum + " exp = " + exp);
        recurse(ch, soFarAns, index + 1, sum + now, exp + 1);
    }

    private boolean canBeExpressed(long sum) {
        while (sum > 1 && sum % 5 == 0) {
            sum /= 5;
        }
        return sum == 1;
    }

    public int getmin(String S) {
        S = new StringBuilder(S).reverse().toString();
        char[] ch = S.toCharArray();
        recurse(ch, 0, 0, 0, 0);
        return ans;
    }

    // BEGIN KAWIGIEDIT TESTING
    // Generated by KawigiEdit-pf 2.3.0
    private static boolean KawigiEdit_RunTest(int testNum, String p0, boolean hasAnswer, int p1) {
        System.out.print("Test " + testNum + ": [" + "\"" + p0 + "\"");
        System.out.println("]");
        CuttingBitString obj;
        int answer;
        obj = new CuttingBitString();
        long startTime = System.currentTimeMillis();
        answer = obj.getmin(p0);
        long endTime = System.currentTimeMillis();
        boolean res;
        res = true;
        System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
        if (hasAnswer) {
            System.out.println("Desired answer:");
            System.out.println("\t" + p1);
        }
        System.out.println("Your answer:");
        System.out.println("\t" + answer);
        if (hasAnswer) {
            res = answer == p1;
        }
        if (!res) {
            System.out.println("DOESN'T MATCH!!!!");
        } else if ((endTime - startTime) / 1000.0 >= 2) {
            System.out.println("FAIL the timeout");
            res = false;
        } else if (hasAnswer) {
            System.out.println("Match :-)");
        } else {
            System.out.println("OK, but is it right?");
        }
        System.out.println("");
        return res;
    }

    public static void main(String[] args) {
        boolean all_right;
        boolean disabled;
        boolean tests_disabled;
        all_right = true;
        tests_disabled = false;

        String p0;
        int p1;

        // ----- test 0 -----
        disabled = true;
        p0 = "101101101";
        p1 = 3;
        all_right = (disabled || KawigiEdit_RunTest(0, p0, true, p1)) && all_right;
        tests_disabled = tests_disabled || disabled;
        // ------------------

        // ----- test 1 -----
        disabled = true;
        p0 = "1111101";
        p1 = 1;
        all_right = (disabled || KawigiEdit_RunTest(1, p0, true, p1)) && all_right;
        tests_disabled = tests_disabled || disabled;
        // ------------------

        // ----- test 2 -----
        disabled = true;
        p0 = "00000";
        p1 = -1;
        all_right = (disabled || KawigiEdit_RunTest(2, p0, true, p1)) && all_right;
        tests_disabled = tests_disabled || disabled;
        // ------------------

        // ----- test 3 -----
        disabled = true;
        p0 = "110011011";
        p1 = 3;
        all_right = (disabled || KawigiEdit_RunTest(3, p0, true, p1)) && all_right;
        tests_disabled = tests_disabled || disabled;
        // ------------------

        // ----- test 4 -----
        disabled = false;
        p0 = "1000101011";
        p1 = -1;
        all_right = (disabled || KawigiEdit_RunTest(4, p0, true, p1)) && all_right;
        tests_disabled = tests_disabled || disabled;
        // ------------------

        // ----- test 5 -----
        disabled = true;
        p0 = "111011100110101100101110111";
        p1 = 5;
        all_right = (disabled || KawigiEdit_RunTest(5, p0, true, p1)) && all_right;
        tests_disabled = tests_disabled || disabled;
        // ------------------

        if (all_right) {
            if (tests_disabled) {
                System.out.println("You're a stud (but some test cases were disabled)!");
            } else {
                System.out.println("You're a stud (at least on given cases)!");
            }
        } else {
            System.out.println("Some of the test cases had errors.");
        }
    }
    // END KAWIGIEDIT TESTING
}

//Powered by KawigiEdit-pf 2.3.0!
