#include <bits/stdc++.h>
#include <string_view>
#include <variant>

using namespace std;

class LandSplitter {
public:
    long long cheapest(int n, int a, int b) {
        long long N = n, A = a, B = b;
        long long ans = 0;
        if (N >= A && N <= B) return 0;
        if (B == 1) return (N * (N - 1)) / 2;

        long long ans2 = -1; long long nn = N;
        for (long long i = B; i >= A; --i) {
            if (nn % i == 0) {
                while (nn > 0) {
                    ans2 += i * (nn - i);
                    nn -= i;
                }
                break;
            }
        }

        while (2 * B <= N) {
            ans += B * (N - B);
            N -= B;
        }
        while (A + B <= N && N > B) {
            ans += B * (N - B);
            N -= B;
        }
        while (N > B && N < A + B && N - A >= A) {
            long long rem = N - A;
            ans += rem * (N - rem);
            N -= rem;
        }
        while (2 * A <= N && N > B) {
            ans += A * (N - A);
            N -= A;
        }
		return (N < A || N > B) && ans2 == -1 ? -1 : ans;
    }
};

// BEGIN KAWIGIEDIT TESTING
// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
bool KawigiEdit_RunTest(int testNum, int p0, int p1, int p2, bool hasAnswer, long long p3) {
	cout << "Test " << testNum << ": [" << p0 << "," << p1 << "," << p2;
	cout << "]" << endl;
	LandSplitter *obj;
	long long answer;
	obj = new LandSplitter();
	clock_t startTime = clock();
	answer = obj->cheapest(p0, p1, p2);
	clock_t endTime = clock();
	delete obj;
	bool res;
	res = true;
	cout << "Time: " << double(endTime - startTime) / CLOCKS_PER_SEC << " seconds" << endl;
	if (hasAnswer) {
		cout << "Desired answer:" << endl;
		cout << "\t" << p3 << endl;
	}
	cout << "Your answer:" << endl;
	cout << "\t" << answer << endl;
	if (hasAnswer) {
		res = answer == p3;
	}
	if (!res) {
		cout << "DOESN'T MATCH!!!!" << endl;
	} else if (double(endTime - startTime) / CLOCKS_PER_SEC >= 2) {
		cout << "FAIL the timeout" << endl;
		res = false;
	} else if (hasAnswer) {
		cout << "Match :-)" << endl;
	} else {
		cout << "OK, but is it right?" << endl;
	}
	cout << "" << endl;
	return res;
}
int main() {
	bool all_right;
	all_right = true;

	int p0;
	int p1;
	int p2;
	long long p3;

	{
	// ----- test 0 -----
	p0 = 12;
	p1 = 3;
	p2 = 3;
	p3 = 54ll;
	all_right = KawigiEdit_RunTest(0, p0, p1, p2, true, p3) && all_right;
	// ------------------
	}

	{
	// ----- test 1 -----
	p0 = 10;
	p1 = 3;
	p2 = 4;
	p3 = 33ll;
	all_right = KawigiEdit_RunTest(1, p0, p1, p2, true, p3) && all_right;
	// ------------------
	}

	{
	// ----- test 2 -----
	p0 = 47;
	p1 = 1;
	p2 = 47;
	p3 = 0ll;
	all_right = KawigiEdit_RunTest(2, p0, p1, p2, true, p3) && all_right;
	// ------------------
	}

	{
	// ----- test 3 -----
	p0 = 70;
	p1 = 40;
	p2 = 50;
	p3 = -1ll;
	all_right = KawigiEdit_RunTest(3, p0, p1, p2, true, p3) && all_right;
	// ------------------
	}

	{
	// ----- test 4 -----
	p0 = 47;
	p1 = 4;
	p2 = 7;
	p3 = 945ll;
	all_right = KawigiEdit_RunTest(4, p0, p1, p2, true, p3) && all_right;
	// ------------------
	}

	if (all_right) {
		cout << "You're a stud (at least on the example cases)!" << endl;
	} else {
		cout << "Some of the test cases had errors." << endl;
	}
	return 0;
}
// END KAWIGIEDIT TESTING
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
